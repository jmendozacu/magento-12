<?php
if (Mage::getSingleton('customer/session')->isLoggedIn()) {
        
        $storeId = 2;
        $erplyModel = Mage::getModel('Erply/Erply');

        if($erplyModel->verifyUser($storeId)){
            $readConnection = Mage::getSingleton('core/resource')->getConnection('core_read');
            $writeConnection = Mage::getSingleton('core/resource')->getConnection('core_write');    

            $customer = Mage::getSingleton('customer/session')->getCustomer();
            $customerAddressId = $customer->getDefaultBilling();
            $phone = '';
            if($customerAddressId){
                $address = Mage::getModel('customer/address')->load($customerAddressId);
                $phone = $address->getBillingTelephone();
            }
            $customerId = $customer->getId();
            $erplyCustomerId = $customer->getErplyCustomerId();
            $email = $customer->getEmail();        
            $newCustomer = false;
            
            if($erplyCustomerId =='' || $erplyCustomerId == 0){
                if($email != ''){
                    $params = array(
                        'searchName' => $email,
                    );
                    $responseJson = $erplyModel->sendRequest('getCustomers', $params);
                    $response = json_decode($responseJson, true);

                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                        $productImportLoop = false;
                        break;
                    }                
                    if ($response["status"]["responseStatus"] == "error"){
                        Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                        $productImportLoop = false;
                        break;
                    }

                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                        break;
                    }else{
                        if(!isset($response['records']) || !count($response['records'])){
                            if($phone != ''){
                                $params = array(
                                    'searchName'    => $phone,
                                );
                                $responseJson = $erplyModel->sendRequest('getCustomers', $params);
                                $response = json_decode($responseJson, true);
                                if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                                    Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                                    $productImportLoop = false;
                                    break;
                                }                
                                if ($response["status"]["responseStatus"] == "error"){
                                    Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                                    $productImportLoop = false;
                                    break;
                                }
                                if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                                    Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                                    break;
                                }else{
                                    if(isset($response['records'])){
                                        if(!count($response['records'])){
                                            $newCustomer = true; 
                                        }else{
                                            if(count($response['records']) > 1){
                                                $newCustomer = true; 
                                            }else{
                                                if(isset($response['records'][0]['customerID'])){
                                                    $customerID = $response['records'][0]['customerID'];
                                                    $customer->setErplyCustomerId($customerID);
                                                    $customer->save();
                                                    $erplyCustomerId = $customerID;
                                                }
                                                $newCustomer = false; 
                                            }                           
                                        }
                                    }else{
                                        $newCustomer = true; 
                                    }    
                                }                            
                            }else{
                                $newCustomer = true; 
                            }
                        }else{
                            if(isset($response['records'][0]['customerID'])){
                                $customerID = $response['records'][0]['customerID'];
                                $customer->setErplyCustomerId($customerID);
                                $customer->save();
                                $erplyCustomerId = $customerID;
                            }                        
                            $newCustomer = false; 
                        }
                    }                    
                }

                if($newCustomer){
                    $params = array(
                        'firstName'    => $customer->getFirstname(),
                        'lastName'    => $customer->getLastname(),
                        'email'    => $customer->getEmail(),
                        'phone'    => $customer->getBillingTelephone(),
                    );
                    $responseJson = $erplyModel->sendRequest('saveCustomer', $params);
                    $response = json_decode($responseJson, true);
                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                        $productImportLoop = false;
                        break;
                    }                
                    if ($response["status"]["responseStatus"] == "error"){
                        Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                        $productImportLoop = false;
                        break;
                    }
                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                        break;
                    }else{
                        if(isset($response['records'][0]['customerID'])){
                            $customerID = $response['records'][0]['customerID'];
                            $customer->setErplyCustomerId($customerID);
                            $customer->save();
                            $erplyCustomerId = $customerID;
                        }
                    }              
                }else{
                    //echo "customer already exist";
                }

            }else{
                
            }

            if($customer->getErplyCustomerId() != '' && $customer->getErplyCustomerId() != 0){

                $params = array(
                    'customerID' => $erplyCustomerId,
                );
                $responseJson = $erplyModel->sendRequest('getCustomerRewardPoints', $params);
                $response = json_decode($responseJson, true);
                if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                    Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                    $productImportLoop = false;
                    break;
                }                
                if ($response["status"]["responseStatus"] == "error"){
                    Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                    $productImportLoop = false;
                    break;
                }
                if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                    Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                    break;
                }else{
                    
                    $erplyPoints = 0;
                    if(isset($response['records'][0]['points'])){
                        $erplyPoints = $response['records'][0]['points'];
                    }
                    $sql = "SELECT * FROM rewards_customer_index_points WHERE customer_id = ".$customer->getId();
                    $rows = $readConnection->fetchAll($sql);
                    $magentoPoints = 0;
                    if(isset($rows[0]['customer_points_usable'])){
                        $magentoPoints = $rows[0]['customer_points_usable'];
                    }else{
                        $sqlInsert = "INSERT INTO rewards_customer_index_points ( customer_id,customer_points_usable,customer_points_pending_event,customer_points_pending_time,customer_points_pending_approval,customer_points_active ) VALUES ('".$customerId."',0,0,0,0,0) ";
                        $writeConnection->query($sqlInsert);
                    }

                    // $params = array(
                 //        'customerID' => $erplyCustomerId,
                 //    );
                 //    $responseJson = $erplyModel->sendRequest('getEarnedRewardPointRecords', $params);
                 //    $response = json_decode($responseJson, true);
                 //    echo "<pre>"; print_r($response);exit;

                    if($magentoPoints != $erplyPoints){

                        // Reward Points Erply >To> Magento
                        $params = array(
                            'customerID' => $erplyCustomerId,
                        );
                        $responseJson = $erplyModel->sendRequest('getEarnedRewardPointRecords', $params);
                        $response = json_decode($responseJson, true);
                        if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                            Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                            $productImportLoop = false;
                            break;
                        }                
                        if ($response["status"]["responseStatus"] == "error"){
                            Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                            $productImportLoop = false;
                            break;
                        }
                        if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                            Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                            break;
                        }else{
                            if(isset($response['records'])){
                                foreach ($response['records'] as $records) {
                                    $sqlSelect = "SELECT erply_transaction_id FROM rewards_transfer WHERE erply_transaction_id = '".$records['transactionID']."'";
                                    $resultRows = $readConnection->fetchAll($sqlSelect);            
                                    if(!count($resultRows)){
                                        $invoiceNo = $records['invoiceNo'];
                                        $comments = '';
                                        if($invoiceNo != ''){
                                            $comments = 'Erply Invoice # $invoiceNo - Order Received - Point Earned';
                                        }else{
                                            $comments = 'Erply Points Earned';
                                        }
                                        $earnedPoints = $records['earnedPoints'];
                                        $transactionID = $records['transactionID'];
                                        $currentDate = date('Y-m-d h:i:s');

                                        if($invoiceNo =='' || empty(Mage::getModel('sales/order')->loadByIncrementId($invoiceNo)->getData())){

                                            $sqlInsert = "INSERT INTO rewards_transfer 
                                            (customer_id, quantity, comments, status, currency_id, erply_transaction_id , creation_ts , last_update_ts)
                                            VALUES 
                                            ('$customerId', '$earnedPoints','$comments', 5,1,'$transactionID', '$currentDate', '$currentDate'); commit;";
                                            $writeConnection->query($sqlInsert);

                                            $customer_points_usable = $magentoPoints + $earnedPoints;
                                            $sqlUpdate = "UPDATE rewards_customer_index_points SET customer_points_usable = '$customer_points_usable', customer_points_active = '$customer_points_usable'  WHERE customer_id = ".$customer->getId();
                                            $writeConnection->query($sqlUpdate);
                                        }
                                    }
                                }
                            }
                        }

                        $params = array(
                            'customerID' => $erplyCustomerId,
                        );
                        $responseJson = $erplyModel->sendRequest('getUsedRewardPointRecords', $params);
                        $response = json_decode($responseJson, true);
                        if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                            Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                            $productImportLoop = false;
                            break;
                        }                
                        if ($response["status"]["responseStatus"] == "error"){
                            Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                            $productImportLoop = false;
                            break;
                        }
                        if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                            Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                            break;
                        }else{
                            if(isset($response['records'])){
                                foreach ($response['records'] as $records) {
                                    $sqlSelect = "SELECT erply_transaction_id FROM rewards_transfer WHERE erply_transaction_id = '".$records['transactionID']."'";
                                    $resultRows = $readConnection->fetchAll($sqlSelect);                                
                                    if(!count($resultRows)){
                                        $invoiceNo = $records['invoiceNo'];
                                        $comments = '';
                                        if($invoiceNo != ''){                                        
                                            $comments = 'Erply Invoice # $invoiceNo - Order Received - Point Spent';
                                        }else{
                                            $comments = 'Erply Points Spent';
                                        }
                                        $usedPoints = $records['usedPoints'] * -1;
                                        $transactionID = $records['transactionID'];
                                        $currentDate = date('Y-m-d h:i:s');
                                        if($invoiceNo =='' || empty(Mage::getModel('sales/order')->loadByIncrementId($invoiceNo)->getData())){
                                            $sqlInsert = "INSERT INTO rewards_transfer 
                                            (customer_id, quantity, comments, status, currency_id, erply_transaction_id , creation_ts , last_update_ts)
                                            VALUES 
                                            ('$customerId', '$usedPoints','$comments', 5,1,'$transactionID', '$currentDate', '$currentDate'); commit;";
                                            $writeConnection->query($sqlInsert);

                                            $customer_points_usable = $magentoPoints + $usedPoints;
                                            $sqlUpdate = "UPDATE rewards_customer_index_points SET customer_points_usable = '$customer_points_usable' , customer_points_active = '$customer_points_usable'  WHERE customer_id = ".$customer->getId();
                                            $writeConnection->query($sqlUpdate);
                                        }
                                    }
                                }
                            }
                        }


                        // Reward Points Magento >To> Erply

                        


                        $sqlSelect = "SELECT * FROM rewards_transfer WHERE customer_id = '".$customerId."' AND erply_transaction_id = 0 AND status = 5";
                        $resultRows = $readConnection->fetchAll($sqlSelect);
                        foreach ($resultRows as $result) {
                            if($result['erply_transaction_id'] == 0 || $result['erply_transaction_id'] == ''){
                                $rewards_transfer_id  = $result['rewards_transfer_id'];
                                
                                if($result['quantity'] > 0){
                                    $params = array(
                                        'customerID'    => $customer->getErplyCustomerId(),
                                        'points' => $result['quantity'],
                                        'description' => 'Magento Transaction: '. $result['comments'],
                                    );
                                    $responseJson = $erplyModel->sendRequest('addCustomerRewardPoints', $params);                
                                    $response = json_decode($responseJson, true);
                                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                                        $productImportLoop = false;
                                        break;
                                    }                
                                    if ($response["status"]["responseStatus"] == "error"){
                                        Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                                        $productImportLoop = false;
                                        break;
                                    }
                                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                                        break;
                                    }else{
                                        if(isset($response['records'][0]['transactionID'])){
                                            $transactionID = $response['records'][0]['transactionID'];
                                            $sqlUpdate = "UPDATE rewards_transfer SET erply_transaction_id = '$transactionID' WHERE rewards_transfer_id = ".$rewards_transfer_id;
                                            $writeConnection->query($sqlUpdate);
                                        }
                                    }                                
                                }



                                if($result['quantity'] < 0){
                                    $params = array(
                                        'customerID'    => $customer->getErplyCustomerId(),
                                        'points' => $result['quantity'] * -1,
                                        'description' => 'Magento Transaction: '. $result['comments'],
                                    );
                                    $responseJson = $erplyModel->sendRequest('subtractCustomerRewardPoints', $params);
                                    $response = json_decode($responseJson, true);
                                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                                        $productImportLoop = false;
                                        break;
                                    }                
                                    if ($response["status"]["responseStatus"] == "error"){
                                        Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                                        $productImportLoop = false;
                                        break;
                                    }
                                    if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                                        Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                                        break;
                                    }else{
                                        if(isset($response['records'][0]['transactionID'])){
                                            $transactionID = $response['records'][0]['transactionID'];
                                            $sqlUpdate = "UPDATE rewards_transfer SET erply_transaction_id = '$transactionID' WHERE rewards_transfer_id = ".$rewards_transfer_id;
                                            $writeConnection->query($sqlUpdate);
                                        }
                                    }                                       
                                }



                            }
                        }

                        $params = array(
                            'customerID' => $erplyCustomerId,
                        );
                        $responseJson = $erplyModel->sendRequest('getCustomerRewardPoints', $params);
                        $response = json_decode($responseJson, true); 
                        if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){ //   Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.
                            Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_limit.log');
                            $productImportLoop = false;
                            break;
                        }                
                        if ($response["status"]["responseStatus"] == "error"){
                            Mage::log($response["status"]["errorCode"],null,'erply_limit.log');
                            $productImportLoop = false;
                            break;
                        }
                        if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                            Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                            break;
                        }else{
                            $erplyPoints = 0;
                            if(isset($response['records'][0]['points'])){
                                $erplyPoints = $response['records'][0]['points'];
                            }
                            
                            $sql = "SELECT * FROM rewards_customer_index_points WHERE customer_id = ".$customer->getId();
                            $rows = $readConnection->fetchAll($sql);
                            $magentoPoints = 0;
                            if(isset($rows[0]['customer_points_usable'])){
                                $magentoPoints = $rows[0]['customer_points_usable'];
                            }else{
                                $sqlInsert = "INSERT INTO rewards_customer_index_points ( customer_id,customer_points_usable,customer_points_pending_event,customer_points_pending_time,customer_points_pending_approval,customer_points_active ) VALUES ('".$customerId."',0,0,0,0,0) ";
                                $writeConnection->query($sqlInsert);
                            }


                            if($magentoPoints != $erplyPoints){
                                // if($magentoPoints > $erplyPoints){
                                //     $diff = $magentoPoints - $erplyPoints;
                                //     $params = array(
                                //         'customerID'    => $customer->getErplyCustomerId(),
                                //         'points' => $diff,
                                //         'description' => 'Magento - Erply Point Difference Adjustment',
                                //     );
                                //     $responseJson = $erplyModel->sendRequest('addCustomerRewardPoints', $params);                
                                //     $response = json_decode($responseJson, true);
                                //     if(isset($response['status']['errorCode']) && $response['status']['errorCode'] == 1002 ){
                                //         Mage::log('Error : Hourly request limit (by default 1000 requests) has been exceeded for this account. Please resume next hour.',null,'erply_productimport.log');
                                //         break;
                                //     }else{
                                //         // Transfer Done
                                //     }
                                // }

                                // if($magentoPoints < $erplyPoints){

                                //     $diff = $erplyPoints - $magentoPoints;
                                //     $currentDate = date('Y-m-d h:i:s');
                                    
                                //     $sqlInsert = "INSERT INTO rewards_transfer 
                                //     (customer_id, quantity, comments, status, currency_id, erply_transaction_id , creation_ts , last_update_ts)
                                //     VALUES 
                                //     ('$customerId', '$diff','Erply - Magento Point Different Adjustment', 5,1,1, '$currentDate', '$currentDate'); commit;";
                                //     $writeConnection->query($sqlInsert);

                                //     $customer_points_usable = $magentoPoints + $diff;
                                //     $sqlUpdate = "UPDATE rewards_customer_index_points SET customer_points_usable = '$customer_points_usable', customer_points_active = '$customer_points_usable'   WHERE customer_id = ".$customer->getId();
                                //     $writeConnection->query($sqlUpdate);
                                // }
                            }


                        }
                            
                    }
                }
            }
        }
    }
    // Erply Magento Sync End
?>

<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2014 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Shopping cart template
 *
 * @var $this Mage_Checkout_Block_Cart
 */
?>
<?php $_priceDisplay = ($this->helper('tax')->displayCartBothPrices()) ? 'display-both-prices' : 'display-single-price'; ?>
<div class="fullrow">
    <div class="our_wrap">

        <div class="ourcart cart <?php echo $_priceDisplay; ?>">
            <div class="page-title title-buttons">
                <h1><?php echo $this->__('Shopping Cart') ?></h1>
                <?php if(!$this->hasError()): ?>
                <ul class="checkout-types top ourcheckbtn">
                <?php foreach ($this->getMethods('top_methods') as $method): ?>
                    <?php if ($methodHtml = $this->getMethodHtml($method)): ?>
                    <li><?php echo $methodHtml; ?></li>
                    <?php endif; ?>
                <?php endforeach; ?>
                </ul>
                <?php endif; ?>
            </div>
            <?php echo str_replace('products', 'Products', $this->getMessagesBlock()->getGroupedHtml()) ?>
            <?php echo $this->getChildHtml('form_before') ?>
            <form id="shopping-cart-form" action="<?php echo $this->getUrl('checkout/cart/updatePost') ?>" method="post">
                <?php echo $this->getBlockHtml('formkey'); ?>
                <table id="shopping-cart-table" class="cart-table data-table">
                    <col width="1" />
                    <col width="1" />
                    <col width="1" />
                    <col width="1" />
                    <col width="1" />
                    <col width="1" />
                    <?php if ($this->helper('tax')->displayCartBothPrices()): ?>
                    <col width="1" />
                    <col width="1" />
                    <?php endif; ?>

                <?php $mergedCells = ($this->helper('tax')->displayCartBothPrices() ? 2 : 1); ?>
                    <thead>
                        <tr>
                            <th rowspan="<?php echo $mergedCells; ?>"><span class="nobr"><?php echo $this->__('Product') ?></span></th>

                            <th rowspan="<?php echo $mergedCells; ?>">&nbsp;</th>

                            <th class="a-center cart-price-head" colspan="<?php echo $mergedCells; ?>">
        <!--                            <div class="cart-price-placeholder">-->
                                    <span class="nobr"><?php echo $this->__('Price') ?></span>
        <!--                            </div>-->
                            </th>

                            <th rowspan="<?php echo $mergedCells; ?>" class="a-center">
                                <?php echo $this->__('Quantity') ?>

                                <?php /*if ($this->helper('wishlist')->isAllowInCart()) : ?>
                                    <span class="nobr"><?php echo $this->__('Move to Wishlist') ?></span>
                                <?php endif*/ ?>

                            </th>

                            <th class="a-center cart-total-head" colspan="<?php echo $mergedCells; ?>">
        <!--                            <div class="cart-total-placeholder">-->
                                    <?php echo $this->__('Subtotal') ?>
        <!--                            </div>-->
                            </th>

                            <th class="a-center" rowspan="<?php echo $mergedCells; ?>">&nbsp;</th>

                        </tr>
                        <?php if ($this->helper('tax')->displayCartBothPrices()): ?>
                        <tr>
                            <th class="a-center cart-price-head"><?php echo $this->helper('tax')->getIncExcTaxLabel(false) ?></th>
                            <th class="a-center cart-price-head"><?php echo $this->helper('tax')->getIncExcTaxLabel(true) ?></th>
                            <th class="a-center cart-total-head"><?php echo $this->helper('tax')->getIncExcTaxLabel(false) ?></th>
                            <th class="a-center cart-total-head"><?php echo $this->helper('tax')->getIncExcTaxLabel(true) ?></th>
                        </tr>
                        <?php endif; ?>
                    </thead>
                    <tfoot>
                        <tr>
                            <td colspan="50" class="a-right cart-footer-actions">

                                <!-- Make this button the first responder rather than empty cart -->
                                
                                <button type="submit" style="visibility:hidden; width:50px;" name="update_cart_action" value="update_qty" title="<?php echo $this->__('Update Shopping Cart'); ?>" class="button2 btn-update"><span><span><?php echo $this->__('Update Shopping Cart'); ?></span></span></button>

                                <button type="submit" name="update_cart_action" value="empty_cart" title="<?php echo $this->__('Empty Cart'); ?>" class="button2 btn-empty" id="empty_cart_button"><span><span><?php echo $this->__('Empty Cart'); ?></span></span></button>

                                

                                

                                <?php if($this->getContinueShoppingUrl()): ?>
                                    <button type="button" title="<?php echo $this->__('Continue Shopping') ?>" class="button2 btn-continue addcontnew" onclick="setLocation('<?php echo $this->getContinueShoppingUrl() ?>')"><span><span><?php echo $this->__('Continue Shopping') ?></span></span></button>
                                    
                                    <span class="or addor">-or-</span>
                                    
                                    <button type="submit" name="update_cart_action" value="update_qty" title="<?php echo $this->__('Update Shopping Cart'); ?>" class="button2 btn-update addnewshopcat"><span><span><?php echo $this->__('Update Shopping Cart'); ?></span></span></button>
                                    
                                <?php endif; ?>
                                <!--[if lt IE 8]>
                                <input type="hidden" id="update_cart_action_container" />
                                <script type="text/javascript">
                                //<![CDATA[
                                    Event.observe(window, 'load', function()
                                    {
                                        // Internet Explorer (lt 8) does not support value attribute in button elements
                                        $emptyCartButton = $('empty_cart_button');
                                        $cartActionContainer = $('update_cart_action_container');
                                        if ($emptyCartButton && $cartActionContainer) {
                                            Event.observe($emptyCartButton, 'click', function()
                                            {
                                                $emptyCartButton.setAttribute('name', 'update_cart_action_temp');
                                                $cartActionContainer.setAttribute('name', 'update_cart_action');
                                                $cartActionContainer.setValue('empty_cart');
                                            });
                                        }

                                    });
                                //]]>
                                </script>
                                <![endif]-->
                            </td>
                        </tr>
                    </tfoot>
                    <tbody>
                    <?php foreach($this->getItems() as $_item): ?>
                        <?php echo $this->getItemHtml($_item) ?>
                    <?php endforeach ?>
                    </tbody>
                </table>
                <script type="text/javascript">decorateTable('shopping-cart-table')</script>
            </form>

            <?php echo $this->getChildHtml('shopping.cart.table.after'); ?>
            <div class="cart-forms">
                <?php /* Extensions placeholder */ ?>
                <?php echo $this->getChildHtml('checkout_cart_widget') ?>
                <?php echo $this->getChildHtml('coupon') ?>
                <?php echo $this->getChildHtml('checkout.cart.extra') ?>
                <?php if (!$this->getIsVirtual()): echo $this->getChildHtml('shipping'); endif; ?>
            </div>
            <div class="cart-totals-wrapper">
                <div class="cart-totals">
                    <?php echo $this->getChildHtml('totals'); ?>
                    <?php if(!$this->hasError()): ?>
                    <ul class="checkout-types bottom">
                    <?php foreach ($this->getMethods('methods') as $method): ?>
                        <?php if ($methodHtml = $this->getMethodHtml($method)): ?>
                        <li class="method-<?php echo preg_replace("/[^_a-zA-Z0-9-]/", '-', $method); ?>"><?php echo $methodHtml; ?></li>
                        <?php endif; ?>
                    <?php endforeach; ?>
                    </ul>
                    <?php endif; ?>
                </div>
            </div>
            <?php //echo $this->getChildHtml('crosssell') ?>
        </div>

    </div>
</div>